<snippet>
	<content><![CDATA[
void mul(long long mat[2][2], long long mat2[2][2]){
    long long a = ((mat[0][0] * mat2[0][0]) % mod + (mat[0][1] * mat2[1][0]) % mod) % mod;
    long long b = ((mat[0][0] * mat2[0][1]) % mod + (mat[0][1] * mat2[1][1]) % mod) % mod;
    long long c = ((mat[1][0] * mat2[0][0]) % mod + (mat[1][1] * mat2[1][0]) % mod) % mod;
    long long d = ((mat[1][0] * mat2[0][1]) % mod + (mat[1][1] * mat2[1][1]) % mod) % mod;
    mat[0][0] = a;
    mat[0][1] = b;
    mat[1][0] = c;
    mat[1][1] = d;
}  
    
long long fibonacci(long long n) {
    long long mat[2][2] = {{0,1},{1,1}};
    long long ans[2][2] = {{1,0},{0,1}};        
    
    while(n){
        if(n&1){
            mul(ans,mat);
        }
        mul(mat,mat);
        n >>= 1;
    }
    return ans[0][1];
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fibonacci</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>